# Generated by Django 5.0.6 on 2024-06-09 12:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cwe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cwe_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CWEs',
                'ordering': ['cwe_id'],
            },
        ),
        migrations.CreateModel(
            name='Cve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cve_id', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('cvss', models.FloatField(blank=True, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('cwe', models.ManyToManyField(to='cybersec.cwe')),
            ],
            options={
                'verbose_name': 'CVEs',
                'ordering': ['cve_id'],
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Image')),
                ('score', models.PositiveIntegerField()),
                ('difficulty', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='challenges', to='cybersec.category')),
                ('cve', models.ManyToManyField(blank=True, to='cybersec.cve')),
                ('cwe', models.ManyToManyField(blank=True, to='cybersec.cwe')),
            ],
            options={
                'verbose_name': 'Challenges',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Exploit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('exploit_code', models.TextField()),
                ('cve', models.ManyToManyField(to='cybersec.cve')),
            ],
            options={
                'verbose_name': 'Exploits',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.CharField(max_length=100)),
                ('hint', models.TextField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='cybersec.challenge')),
            ],
            options={
                'verbose_name': 'Flags',
                'ordering': ['flag'],
            },
        ),
    ]
